#:kivy 1.0
#:import FadeTransition kivy.uix.screenmanager.FadeTransition

Screens:
    transition: FadeTransition()
    IntroScreen:
    NonExistingPeopleScreen:
    FakePersonAnswerScreen:
    CameraAndPlaybackScreen:
    VideoScreen:
    Outro:

<ArcadeButton>:
    spacing: 10
    size_hint: 1, None
    Image:
        source: root.file
        size_hint: None, None
        halign: 'right'
    Label:
        id: text
        text: root.text
        text_size: self.size
        size_hint: None, None
        halign: 'left'
        valign: 'center'

<ButtonRow>:
    size_hint_y: None

<IntroScreen>:
    name: 'intro'
    on_enter: intro_video.state = 'play'
    on_leave: intro_video.state = 'pause'
    BoxLayout:
        id: layout
        orientation: 'vertical'
        Image:
            size_hint: 1, None
            source: 'images/banner.png'
        Label:
            size_hint: 1, None
            text: app.texts['intro']
            font_size: 18
            text_size: self.size
            halign: 'center'
        VideoPlayer:
            id: intro_video
            size_hint: 1, 0.5
            source: 'videos/Top 80 Deepfake Videos - Only Highlights!.mp4'
            annotations: 'videos/subtitles_da.jsa' if app.lang == 'da' else 'videos/subtitles_en.jsa'
            state: 'play'
            on_state: root.restart_video()
        ButtonRow:
            yellow_button: app.texts['lets_start_btn']
            white_button: 'Dansk / Danish'
            black_button: 'English / Engelsk'

<NonExistingPeopleScreen>:
    name: 'persons'
    on_kv_post: self.setup_persons()
    BoxLayout:
        orientation: 'vertical'
        id: persons_box
        Image:
            size_hint: 1, None
            source: 'images/persons.png' if app.lang == 'da' else 'images/persons_en.png'
        Label:
            size_hint: 1, None
            text: app.texts['persons']
            text_size: self.size
            font_size: 24
            halign: 'center'
        BoxLayout:
            id: fake_row
        ButtonRow:
            yellow_button: app.texts['skip_btn']
            blue_button: app.texts['famous_btn']
            black_button: app.texts['participant_btn']
            white_button: app.texts['nonexist_btn']

<FakePersonAnswerScreen>:
    name:'fake_answer'
    id: answer_screen
    BoxLayout:
        orientation: 'vertical'
        Image:
            size_hint: 1, None
            source:
                ('images/correct.png' if answer_screen.correct else 'images/wrong.png') if app.lang == 'da' else ('images/correct_en.png' if answer_screen.correct else 'images/wrong_en.png')
        Label:
            size_hint: 1, None
            font_size: 32
            text: app.texts['persons_correct'] if answer_screen.correct else app.texts['persons_wrong']
            halign: 'center'
        Label:
            text: app.texts['persons_explanation']
            text_size: self.size
            font_size: 18
            halign: 'center'
            valign: 'center'
        ButtonRow:
            yellow_button: app.texts['carry_on_btn']

<CameraAndPlaybackScreen>:
    name: 'camfun'
    BoxLayout:
        orientation: 'vertical'
        Image:
            size_hint: 1, None
            source: 'images/avatar.png' if app.lang == 'da' else 'images/avatar_en.png'
        Label:
            font_size: 18
            size_hint_y: 2
            text_size: (self.width, None)
            text: app.texts['camfun']
            halign: 'center'
        BoxLayout:
            size_hint_y: 5
            spacing: 100
            Label:
                text: ''
            Image:
                id: camera
                halign: 'right'
            Image:
                id: avatar
                halign: 'left'
            Label:
                text: ''
        ButtonRow:
            yellow_button: app.texts['skip_btn']
            blue_button: app.texts['calibrate_btn']
            black_button: app.texts['next_avatar_btn']
            white_button: app.texts['prev_avatar_btn']

<VideoScreen>:
    name: 'videos'
    id: container
    on_leave: player.state = 'stop'
    on_idx: player.state = 'play'
    BoxLayout:
        orientation: 'vertical'
        Image:
            size_hint: 1, None
            source: 'images/videos.png' if app.lang == 'da' else 'images/videos_en.png'
        Label:
            size_hint: 1, None
            text: app.texts['videos']
            font_size: 18
            text_size: self.size
            halign: 'center'
        VideoPlayer:
            id: player
            size_hint: 1, 0.4
            source: container.videos[container.idx]
            state: 'stop'
        ButtonRow:
            yellow_button: app.texts['skip_btn']
            black_button: app.texts['next_video_btn']
            white_button: app.texts['prev_video_btn']

<Outro>:
    name: 'outro'
    BoxLayout:
        orientation: 'vertical'
        Image:
            size_hint: 1, None
            source: 'images/outro.png' if app.lang == 'da' else 'images/outro_en.png'
        Label:
            font_size: 18
            size_hint_y: 2
            height: self.texture_size[1]
            text_size: (self.width, None)
            text: app.texts['outro']
            halign: 'center'
        ButtonRow:
            yellow_button: app.texts['end_btn']

